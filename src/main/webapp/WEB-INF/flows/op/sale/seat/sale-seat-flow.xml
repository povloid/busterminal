<?xml version="1.0" encoding="UTF-8"?>
<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
        http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd"
	start-state="sale-seat">

	<secured attributes="ROLE_OP_CASSIR_SALE" />

	<var name="oPSaleSeatWFControl" class="pk.home.busterminal.web.jsf.webflow.OPSaleSeatWFControl" />

	<input name="raceId" type="java.lang.Long" required="true" />
	<input name="seatId" type="java.lang.Long" required="true" />
	<input name="retUrl" type="java.lang.String" />


	<on-start>
		<evaluate expression="oPSaleSeatWFControl.findRace(raceId)" />
		<evaluate expression="oPSaleSeatWFControl.findSeat(seatId)" />
		<evaluate expression="oPSaleSeatWFControl.createSaleOrder()" />
	</on-start>


	<view-state id="sale-seat">
		<on-entry>
			<evaluate expression="oPSaleSeatWFControl.init()" />
		</on-entry>

		<transition on="end" to="end"></transition>
		<transition on="selectCustomer" to="selectCustomer" />
		<transition on="qsale-seat" to="qsale-seat" />


		<transition on-exception="java.lang.Exception" to="sale-seat" />
	</view-state>

	<!-- select customer -->

	<subflow-state id="selectCustomer" subflow="customer/selectOne">
		<transition to="sale-seat">
			<evaluate
				expression="oPSaleSeatWFControl.setCustomer(currentEvent.attributes.selectedId)" />
		</transition>
		<transition on-exception="java.lang.Exception" to="sale-seat" />
	</subflow-state>

	<!-- sale seat questuon -->



	<!-- QSALE-SEAT ? -->

	<view-state id="qsale-seat">

		<transition on="end" to="end"></transition>
		<transition on="no" to="sale-seat"></transition>

		<transition on="success" to="sale-seat-op-report" />

		<transition on-exception="java.lang.Exception" to="qsale-seat" />
	</view-state>




	<!-- SALE-REPORT -->

	<view-state id="sale-seat-op-report">
		<transition on="ok" to="end"></transition>
	</view-state>


	<!-- END -->

	<decision-state id="end">
		<if test="retUrl == null" then="end0" else="end1" />
	</decision-state>


	<end-state id="end1" view='externalRedirect:contextRelative:#{retUrl}'>
	</end-state>


	<end-state id="end0" view='externalRedirect:contextRelative:/'>
	</end-state>

</flow>
